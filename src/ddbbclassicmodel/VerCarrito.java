/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ddbbclassicmodel;

import Estructura.Producto;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tarda
 */
public class VerCarrito extends javax.swing.JFrame {
private boolean control = false;

private static ArrayList<Producto> carritoVenta;
DefaultTableModel modelo;
classicmodels cm;
GregorianCalendar cc=new GregorianCalendar();
 private double total=0;
 LoginPrincipal lp;
 private String codigoU;
    /**
     * Creates new form VerCarrito
     */
    public VerCarrito() {
        initComponents();
        carritoVenta=cm.getCarrito();
        codigoU=lp.getCodigoUser();
        consultarProductos();
        fechas();
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCarrito = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabelFacturaTotal = new javax.swing.JLabel();
        jLabelFecha = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("CERRAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTableCarrito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableCarrito);

        jLabel1.setText("FACTURA TOTAL:");

        jLabelFacturaTotal.setText("jLabel2");

        jLabelFecha.setText("jLabel2");

        jLabel2.setText("FECHA:");

        jButton2.setText("COMPRAR Y SALIR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addGap(117, 117, 117)
                                .addComponent(jButton1))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelFecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelFacturaTotal)
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelFacturaTotal)
                    .addComponent(jLabelFecha)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void fechas(){
  
    jLabelFecha.setText(""+cc.getTime());
}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed
public void restarCantidad(){
         
        String vSQL = new String();
      //  String[] registro = new String[3];
        
        String orderNum="";
        int modOrder;
        
        ConexionMySQL mysql = new ConexionMySQL();
        Connection cn = mysql.conectarCustomer();
        for(int i=0;i<carritoVenta.size();i++){
        vSQL = "UPDATE products SET quantityInStock = quantityInStock-"+carritoVenta.get(i).getCantidad()+" WHERE productName='"+carritoVenta.get(i).getNombre()+"';";  
        
        
         try {
       
            Statement st = cn.createStatement();
           int rp = st.executeUpdate(vSQL);
             System.out.println(rp);
            if(rp==1){
                
               control=true; 
         
            }
            
            
          
          
           
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
    }
        
        }
        
    }
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       // String[] titols = {"Nombre Producto", "Stock","Precio"};
       
       //restarCantidad();
       
        String vSQL = new String();
      //  String[] registro = new String[3];
        
        String orderNum="";
        int modOrder;
        
        ConexionMySQL mysql = new ConexionMySQL();
        Connection cn = mysql.conectarCustomer();

        vSQL = "SELECT MAX(orderNumber) FROM orders;";  
        
        
         try {
       
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(vSQL);
            if(rs.next()){
                  modOrder=Integer.parseInt(rs.getString("MAX(orderNumber)"));
           
            modOrder++;
            orderNum=modOrder+"";
         
            }
            
            
          
          
           
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
    }
           
            
            cc.setTime(new java.util.Date());
               String fecha1;
                int dia= cc.get(GregorianCalendar.DAY_OF_MONTH);
              int mes=cc.get(GregorianCalendar.MONTH)+1;
                 int año=cc.get(GregorianCalendar.YEAR);
              if(mes<10){
                 fecha1=año+"-0"+mes+"-"+dia;  
              }
              if(dia<10){
                  fecha1=año+"-"+mes+"-0"+dia;  
              }
              fecha1=año+"-"+mes+"-"+dia; 
              String fecha2=año+"-"+mes+"-"+dia+2;  
              String fecha3=año+"-"+mes+"-"+dia+1;
              if(dia<10){
                  fecha2=año+"-"+mes+"-0"+dia+2;  
              }
              if(dia<10){
                  fecha3=año+"-"+mes+"-0"+dia+1;  
              }
           
           
     //vSQL = "INSERT INTO orders(orderNumber,orderDate,requiredDate,shippedDate,status,comments,customerNumber) VALUES (?,NOW(),NOW() + INTERVAL 7 DAY,?,?,?,?)";       
   vSQL = "INSERT INTO orders(`orderNumber`,`orderDate`,`requiredDate`,`shippedDate`,`status`,`comments`,`customerNumber`) VALUES ('"+orderNum+"',NOW(),NOW() + INTERVAL 7 DAY,NOW() + INTERVAL 11 DAY,'In Progress',NULL,'"+codigoU+"');";// esto es lo que cambia
try {
       
            Statement st = cn.createStatement();
            int rl = st.executeUpdate(vSQL);
            if(rl>0){
                System.out.println("insert en orders correcto");
            }
   }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
    }
  
  
 try{
  // el insert en order details
  
 
 
  String codeP;
  String cant;
  String preu;
  for(int i=0;i<carritoVenta.size();i++){
  vSQL="SELECT productCode FROM products WHERE productName='"+carritoVenta.get(i).getNombre()+"';";
   Statement st = cn.createStatement();
  ResultSet rs = st.executeQuery(vSQL);
  if(rs.next()){
 
  codeP=rs.getString(1);
  cant=carritoVenta.get(i).getCantidad()+"";
  preu=carritoVenta.get(i).getPrecio()+"";
  int linea=i;
  linea++;
     
   vSQL="INSERT INTO `orderdetails`(`orderNumber`,`productCode`,`quantityOrdered`,`priceEach`,`orderLineNumber`) VALUES ('"+orderNum+"','"+codeP+"','"+cant+"','"+preu+"','"+linea+"');";
   // Statement st = cn.createStatement();
  int rt = st.executeUpdate(vSQL);
  }
  }
  
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
    }
      
   


 
 
 
 
 
 
 
      String.format("%.2f", total); 
               FileWriter fichero = null;
        PrintWriter pw = null;
        try
        {
            fichero = new FileWriter("ticket.txt");// selecciono fichero
            pw = new PrintWriter(fichero);// boli para el fichero
            pw.println("TICKET CLASSICMODELS");
           // pw.println("NOMBRE PRODUCTO");
            for (int i = 0; i < carritoVenta.size(); i++){
            pw.println("PRODCUTO: "+carritoVenta.get(i).getNombre().toUpperCase()+"CANTIDAD: "+carritoVenta.get(i).getCantidad()+"PRECIO UNIDAD: "+carritoVenta.get(i).getPrecio()+"\n");
         
            }
            pw.println("FECHA DE COMPRA: "+cc.getTime());
            pw.println("\n");
               pw.println("---------------------------------------------------");
            pw.println("TOTAL FACTURA:______________________"+total+" €");
            pw.println("---------------------------------------------------");
            pw.println("\n");
            pw.println("¡VUELVA PRONTO!");
            //realizar la insert en orders
            
            JOptionPane.showMessageDialog(null,"GRACIAS POR UTILIZAR NUESTRA TIENDA, VUELVA CUANDO DESEE. LE ESTAREMOS ESPERANDO");
           
            
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
           try {
           // Nuevamente aprovechamos el finally para 
           // asegurarnos que se cierra el fichero.
           if (null != fichero)
              fichero.close();
           } catch (Exception e2) {
              e2.printStackTrace();
           }
        }
    
         System.exit(0);
        
    }//GEN-LAST:event_jButton2ActionPerformed
public void consultarProductos() {
        String.format("%.2f", total); 
   
String[][] tablaP = new String[carritoVenta.size()][3];

for(int i=0;i<carritoVenta.size();i++){
    
   tablaP[i][0]=carritoVenta.get(i).getNombre().toUpperCase();
   tablaP[i][1]=""+carritoVenta.get(i).getCantidad();
   tablaP[i][2]=""+carritoVenta.get(i).getPrecio();
   total=total+(carritoVenta.get(i).getCantidad()*carritoVenta.get(i).getPrecio());
}
jTableCarrito.setModel(new javax.swing.table.DefaultTableModel(
        tablaP,
        new String[]{
            "NOMBRE PRODUCTO","CANTIDAD","PRECIO"
        }
));
jLabelFacturaTotal.setText(total+" €");
     
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VerCarrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VerCarrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VerCarrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VerCarrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VerCarrito().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelFacturaTotal;
    private javax.swing.JLabel jLabelFecha;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCarrito;
    // End of variables declaration//GEN-END:variables
}
